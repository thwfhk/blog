<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>writing | </title>
    <link>thwfhk.github.io/tag/writing/</link>
      <atom:link href="thwfhk.github.io/tag/writing/index.xml" rel="self" type="application/rss+xml" />
    <description>writing</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 16 May 2020 09:49:46 +0800</lastBuildDate>
    <image>
      <url>/thwfhk.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>writing</title>
      <link>thwfhk.github.io/tag/writing/</link>
    </image>
    
    <item>
      <title>如何安全地知道对方是否喜欢你</title>
      <link>thwfhk.github.io/post/do_u_like_me/</link>
      <pubDate>Sat, 16 May 2020 09:49:46 +0800</pubDate>
      <guid>thwfhk.github.io/post/do_u_like_me/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;爱情其实就是阿妮玛/阿尼姆斯在对方身上的投射。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是一篇科普小短文，尽量使用了通俗易懂的语言来描述，希望能给读者带来一点乐趣！&lt;/p&gt;
&lt;!--我想从生活中的一些有趣的问题出发，介绍一些有关CS,math等等方面的知识，尽可能写的简单易懂，方便非专业人士阅读并获得乐趣。虽然我的水平也仅限于入门，但还是希望能给读者带来一点乐趣。--&gt;
&lt;p&gt;下面开始正文：&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;生活中有一种&lt;del&gt;常见&lt;/del&gt;的情景：“Alice很喜欢Bob，想要向Bob表白，但是又害怕对方不喜欢自己而引起尴尬。”&lt;/p&gt;
&lt;p&gt;很多人都会陷入这种两难（dilemma）中，那么有什么办法可以在不暴露自己是否喜欢对方的前提下得知对方是否喜欢自己呢？&lt;/p&gt;
&lt;p&gt;一个简单的做法是，Alice和Bob分别告诉Carol自己是否喜欢对方，然后Carol同时告诉Alice和Bob你们&lt;em&gt;是否相互喜欢对方&lt;/em&gt;。但是这种方法有一个明显的问题：你可能并不想让Carol知道自己的心意。&lt;/p&gt;
&lt;p&gt;那有没有&lt;strong&gt;更安全&lt;/strong&gt;的方法呢？&lt;/p&gt;
&lt;p&gt;当然是有的。事实上，我们可以做到“Alice和Bob可以得知两人是否互相喜欢对方，并且自己是否喜欢对方这个信息不会被泄露给任何一个人”（当然了，“最后结果是相互喜欢”这种泄露不算）。并且，这一过程只需要&lt;strong&gt;交谈和2以内的加法乘法&lt;/strong&gt;就可以完成，无需借助计算机等设备。&lt;/p&gt;
&lt;h2 id=&#34;一种安全的方法&#34;&gt;一种安全的方法&lt;/h2&gt;
&lt;p&gt;为了表达方便，下面所有的数都要么是0要么是1，并且定义运算&lt;span class=&#34;math inline&#34;&gt;\(x\land y = x\times y,\ x\oplus y = (x+y) \bmod 2\)&lt;/span&gt;（&lt;span class=&#34;math inline&#34;&gt;\(\bmod 2\)&lt;/span&gt;表示除2取余数），实际上就是二进制的and运算和xor运算。&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Alice手里有一个数&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;，如果Alice喜欢Bob，那么&lt;span class=&#34;math inline&#34;&gt;\(x=1\)&lt;/span&gt;，否则&lt;span class=&#34;math inline&#34;&gt;\(x=0\)&lt;/span&gt;；同样的，Bob手里也有一个数&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;，如果Bob喜欢Alice，那么&lt;span class=&#34;math inline&#34;&gt;\(y=1\)&lt;/span&gt;，否则&lt;span class=&#34;math inline&#34;&gt;\(y=0\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Alice将&lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;任意拆成&lt;span class=&#34;math inline&#34;&gt;\(x=x_1\oplus x_2\)&lt;/span&gt;；同样的，Bob也将&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;任意拆成&lt;span class=&#34;math inline&#34;&gt;\(y=y_1\oplus y_2\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Alice将&lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt;留下，&lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt;告诉Bob；类似的，Bob将&lt;span class=&#34;math inline&#34;&gt;\(y_2\)&lt;/span&gt;留下，&lt;span class=&#34;math inline&#34;&gt;\(y_1\)&lt;/span&gt;告诉Alice。此时Alice知道&lt;span class=&#34;math inline&#34;&gt;\(x_1,y_1\)&lt;/span&gt;，Bob知道&lt;span class=&#34;math inline&#34;&gt;\(x_2,y_2\)&lt;/span&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需要有一个第三方Carol，Carol要随机想好一个等式&lt;span class=&#34;math inline&#34;&gt;\(c=a\land b\)&lt;/span&gt;，然后将&lt;span class=&#34;math inline&#34;&gt;\(c,x,y\)&lt;/span&gt;分别拆成&lt;span class=&#34;math inline&#34;&gt;\(c=c_1\oplus c_2,\ a=a_1\oplus a_2,\ b=b_1\oplus b_2\)&lt;/span&gt;；将&lt;span class=&#34;math inline&#34;&gt;\(a_1,b_1,c_1\)&lt;/span&gt;告诉Alice，&lt;span class=&#34;math inline&#34;&gt;\(a_2,b_2,c_2\)&lt;/span&gt;告诉Bob，Carol的任务就完成了。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Alice计算&lt;span class=&#34;math inline&#34;&gt;\(e_1=a_1\oplus x_1,\ f_1=b_1\oplus y_1\)&lt;/span&gt;；同样的，Bob计算&lt;span class=&#34;math inline&#34;&gt;\(e_2=a_2\oplus x_2,\ f_2=b_2\oplus y_2\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;Alice和Bob将&lt;span class=&#34;math inline&#34;&gt;\(e_1,f_1\)&lt;/span&gt;和&lt;span class=&#34;math inline&#34;&gt;\(e_2,f_2\)&lt;/span&gt;告诉对方，一起计算&lt;span class=&#34;math inline&#34;&gt;\(e=e_1\oplus e_2,\ f=f_1\oplus f_2\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;Alice计算&lt;span class=&#34;math inline&#34;&gt;\(z_1 = (f\land a_1)\oplus (e\land b_1)\oplus c_1\)&lt;/span&gt;；同样的，Bob计算&lt;span class=&#34;math inline&#34;&gt;\(z_2 = (f\land a_2)\oplus (e\land b_2)\oplus c_2\)&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后，Alice和Bob将&lt;span class=&#34;math inline&#34;&gt;\(z_1\)&lt;/span&gt;和&lt;span class=&#34;math inline&#34;&gt;\(z_2\)&lt;/span&gt;告诉对方，一起计算出&lt;span class=&#34;math inline&#34;&gt;\(z=z_1\oplus z_2\)&lt;/span&gt;，我们就完成了！如果&lt;span class=&#34;math inline&#34;&gt;\(z=1\)&lt;/span&gt;，说明Alice和Bob互相喜欢；如果&lt;span class=&#34;math inline&#34;&gt;\(z=0\)&lt;/span&gt;，说明Alice和Bob当中至少有一个人不喜欢对方。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;原理是什么&#34;&gt;原理是什么？&lt;/h2&gt;
&lt;p&gt;实际上，我们刚才的过程就是在“双方安全的计算两个数的乘积”，只不过是在模2意义下的单bit形式。&lt;/p&gt;
&lt;p&gt;这个问题属于&lt;strong&gt;多方安全计算(Secure Multi-Party Computation)&lt;/strong&gt;领域，刚才的过程实际上通过一种叫做&lt;strong&gt;秘密共享(Secret Sharing)&lt;/strong&gt;的方法完成的。&lt;/p&gt;
&lt;p&gt;直观上，Alice秘密就是&lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;，然后Alice将他/她的秘密的一部分&lt;span class=&#34;math inline&#34;&gt;\(a_2\)&lt;/span&gt;分享给了Bob；Bob也是同理。&lt;/p&gt;
&lt;p&gt;更具体的解释，可以自行Google，或者参考&lt;em&gt;ABY–A Framework for Efficient Mixed-Protocol Secure Two-Party Computation&lt;/em&gt;这篇文章的第三部分。&lt;/p&gt;
&lt;h2 id=&#34;它真的正确吗&#34;&gt;它真的正确吗？&lt;/h2&gt;
&lt;p&gt;是真的。不信的话，你可以马上找身边的人陪你玩一下。&lt;/p&gt;
&lt;h2 id=&#34;它真的安全吗&#34;&gt;它真的安全吗？&lt;/h2&gt;
&lt;p&gt;只要你不把不该告诉对方的东西说出去，它就是安全的。&lt;/p&gt;
&lt;p&gt;当然了，如果Carol和对方串通一气的话就不好了。&lt;/p&gt;
&lt;p&gt;事实上，Carol并不是必须的，我们可以通过&lt;strong&gt;Homomorphic Encryption(HE)&lt;/strong&gt;或者&lt;strong&gt;Obilivious Transfer(OT)&lt;/strong&gt;的方法来计算这个multiplication triple &lt;span class=&#34;math inline&#34;&gt;\((c_1\oplus c_2)= (a_1\oplus a_2)\land (b_1\oplus b_2)\)&lt;/span&gt;。然而，HE和OT并不是能手算的东西。并且既然都HE了，直接用HE来安全的计算&lt;span class=&#34;math inline&#34;&gt;\(x\land y\)&lt;/span&gt;不好吗🙃&lt;/p&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;p&gt;遇到生活中有趣的问题，还能与近期学的一些知识产生联系的概率真的很小QwQ。&lt;/p&gt;
&lt;p&gt;希望这个系列能活下去...&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为什么2月只有28天</title>
      <link>thwfhk.github.io/post/february/</link>
      <pubDate>Mon, 23 Sep 2019 23:53:20 +0800</pubDate>
      <guid>thwfhk.github.io/post/february/</guid>
      <description>&lt;p&gt;故事是这样开始的：&lt;/p&gt;
&lt;p&gt;今天下午ICS课的时候昕神跟我说：“国庆节不会要放两个lab吧，国庆放几天啊”。&lt;/p&gt;
&lt;p&gt;我看了一下校历，“从9月28号到10月6号，28、29、30、31，加6天，10天吧”&lt;/p&gt;
&lt;p&gt;“你怎么判断9月的大小的啊？”，昕神这时还在数手指关节判断大月小月。&lt;/p&gt;
&lt;p&gt;“奥奥，9月是小月啊，那应该是9天”，我恍然大悟。&lt;/p&gt;
&lt;p&gt;“判断大小月好麻烦，不可以直接用奇偶性”&lt;/p&gt;
&lt;p&gt;“主要是因为7月8月连续是大月，当初设计的时候为什么不2月29天然后8月也是小月”&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;于是我开始查2月只有28天的原因。&lt;/p&gt;
&lt;p&gt;大多数中文资料都讲了这样一个故事：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;凯撒修改后的历法中2月是29天的并且8月是30天，屋大维继位后，不满足于自己出生的8月份只有30天于是从2月中拿了一天到8月。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;虽然非常具有戏剧性，但这个故事实在是太不可信，我又去google了一下，结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;thwfhk.github.io/images/februray/aogusidu.jpg&#34; alt=&#34;agsd&#34;&gt;&lt;/p&gt;
&lt;p&gt;人家根本就不是8月出生的！（当然，有其他版本的故事说屋大维是8月获得奥古斯都的称号，所以将8月变成大月，但这也是不对的）&lt;/p&gt;
&lt;p&gt;有很多&lt;a href=&#34;http://mentalfloss.com/article/55327/why-are-there-only-28-days-february&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;英文资料&lt;/a&gt;解释了这个原因，说法大致相同，概括来说就是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;罗马人最初到历法是月亮历，并且只有10个月，1月和2月没有命名，因为当时的罗马人觉得那段时间不重要（对耕种而言）。&lt;/p&gt;
&lt;p&gt;这10个月中有6个30天4个31天，共304天。&lt;/p&gt;
&lt;p&gt;后来罗马的第二个皇帝Numa将1月和2月加到了这10个月的最后，让总天数为355天。出于对“偶数不吉利”的认识，还将30天的月改成29天。这样一来，剩下57天分给两个月，必须让1个月是28天，于是就选择了最后一个2月。&lt;/p&gt;
&lt;p&gt;但是355天显然不对，于是加入了“闰月”制度。&lt;/p&gt;
&lt;p&gt;凯撒即位后将历法改革成太阳历，给一些月加了1到2天成了30天和31天，但保留了2月还是28天。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而那种错误的解释，可以追溯到13世纪Sacrobosco的解释，详情可见&lt;a href=&#34;https://en.wikipedia.org/wiki/Julian_calendar&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wiki&lt;/a&gt;中的说明。这个解释已经被许多史料证明是不对的。&lt;/p&gt;
&lt;p&gt;值得一提的是，在实行闰月制度的时候，人们也记不清是否闰月，都是由priests宣布的，所以就会产生滥用权力进行&lt;strong&gt;时间攻击&lt;/strong&gt;的情况发生，比如“extend the terms of friends and trim the terms of enemies”，想想也是蛮酷的。&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;最后总结，这个故事告诉我们：放假真好！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;PS：今天晚上autolab真的修好了，第一个lab也发布了，due竟然是9月30号，然后我本周离散作业还没写，wysl😢&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
